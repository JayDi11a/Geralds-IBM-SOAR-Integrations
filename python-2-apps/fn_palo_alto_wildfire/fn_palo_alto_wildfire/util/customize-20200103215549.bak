# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_palo_alto_wildfire"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_palo_alto_wildfire package"""
    reload_params = {"package": u"fn_palo_alto_wildfire",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"artifact_id", u"incident_id"], 
                    "datatables": [], 
                    "message_destinations": [u"palo_alto_wildfire"], 
                    "functions": [u"palo_alto_wildfire_file_submission_artifact"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_palo_alto_wildfire_file_submission_artifact"], 
                    "actions": [u"Example: Submit File (Artifact) to WildFire"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     artifact_id
    #     incident_id
    #   Message Destinations:
    #     palo_alto_wildfire
    #   Functions:
    #     palo_alto_wildfire_file_submission_artifact
    #   Workflows:
    #     example_palo_alto_wildfire_file_submission_artifact
    #   Rules:
    #     Example: Submit File (Artifact) to WildFire


    yield ImportDefinition(u"""
eyJncm91cHMiOiBudWxsLCAibG9jYWxlIjogbnVsbCwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0
aW9uIjogIlRoaXMgd29ya2Zsb3cgY2FsbHMgYSBmdW5jdGlvbiB0aGF0IHN1Ym1pdHMgYSBmaWxl
IGFuZCB1cGxvYWRzIGl0IHRvIHRoZSBQYWxvIEFsdG8gV2lsZGZpcmUgZW5kcG9pbnQuIFRoZSBy
ZXN1bHRzIG9mIHRoZSBmaWxlIHN1Ym1pc3Npb24gYXJlIHRoZW4gcmV0dXJuZWQgdG8gdGhlIGlu
Y2lkZW50LiIsICJ3b3JrZmxvd19pZCI6IDI0OCwgInRhZ3MiOiBbXSwgIm9iamVjdF90eXBlIjog
ImFydGlmYWN0IiwgImV4cG9ydF9rZXkiOiAiZXhhbXBsZV9wYWxvX2FsdG9fd2lsZGZpcmVfZmls
ZV9zdWJtaXNzaW9uX2FydGlmYWN0IiwgInV1aWQiOiAiYTU5ZGE5NjUtNTQ4Yi00ODdhLWE3NDkt
MzljNGQ2M2RiOWRhIiwgImFjdGlvbnMiOiBbXSwgImNvbnRlbnQiOiB7InhtbCI6ICI8P3htbCB2
ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRp
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2Rj
PVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1c
Imh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIwMTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50
PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2JwbW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3
LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5zOnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIw
MDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11
bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJleGFtcGxlX3BhbG9fYWx0b193aWxkZmlyZV9m
aWxlX3N1Ym1pc3Npb25fYXJ0aWZhY3RcIiBpc0V4ZWN1dGFibGU9XCJ0cnVlXCIgbmFtZT1cIkV4
YW1wbGU6IFBhbG8gQWx0byBXaWxkZmlyZSBGaWxlIFN1Ym1pc3Npb24gKEFydGlmYWN0KVwiPjxk
b2N1bWVudGF0aW9uPlRoaXMgd29ya2Zsb3cgY2FsbHMgYSBmdW5jdGlvbiB0aGF0IHN1Ym1pdHMg
YSBmaWxlIGFuZCB1cGxvYWRzIGl0IHRvIHRoZSBQYWxvIEFsdG8gV2lsZGZpcmUgZW5kcG9pbnQu
IFRoZSByZXN1bHRzIG9mIHRoZSBmaWxlIHN1Ym1pc3Npb24gYXJlIHRoZW4gcmV0dXJuZWQgdG8g
dGhlIGluY2lkZW50LjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBpZD1cIlN0YXJ0RXZlbnRf
MTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMXQ0aXZ0aTwvb3V0Z29pbmc+PC9zdGFy
dEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzAyd21yNWtcIiBuYW1lPVwiUGFs
byBBbHRvIFdpbGRmaXJlIEZpbGUgU3VibWlzc2lvLi4uXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5j
dGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCI5MDMz
YzFkNi01Zjc1LTQ1YTQtODRmMC0yYWRlNDk1MmUxNTJcIj57XCJpbnB1dHNcIjp7fX08L3Jlc2ls
aWVudDpmdW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3df
MXQ0aXZ0aTwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wcTNqdnN0PC9vdXRnb2lu
Zz48L3NlcnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMXQ0aXZ0aVwi
IHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNr
XzAyd21yNWtcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMXJocGl6cFwiPjxpbmNvbWluZz5T
ZXF1ZW5jZUZsb3dfMHEzanZzdDwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlk
PVwiU2VxdWVuY2VGbG93XzBxM2p2c3RcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wMndtcjVr
XCIgdGFyZ2V0UmVmPVwiRW5kRXZlbnRfMXJocGl6cFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJU
ZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90
ZXh0PjwvdGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0
OFwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5v
dGF0aW9uXzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1O
RGlhZ3JhbV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBp
ZD1cIkJQTU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMg
aGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpC
UE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdc
IiB5PVwiMjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5k
aTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJU
ZXh0QW5ub3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdp
ZHRoPVwiMTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5k
aTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29j
aWF0aW9uXzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpC
UE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18wMndtcjVrXCIgaWQ9XCJTZXJ2aWNl
VGFza18wMndtcjVrX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAw
XCIgeD1cIjQxMlwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMXQ0aXZ0aVwiIGlkPVwiU2VxdWVuY2VGbG93
XzF0NGl2dGlfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDEyXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBo
ZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIzMDVcIiB5PVwiMTg0LjVcIi8+PC9icG1uZGk6
QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50
PVwiRW5kRXZlbnRfMXJocGl6cFwiIGlkPVwiRW5kRXZlbnRfMXJocGl6cF9kaVwiPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjcxOFwiIHk9XCIxODhcIi8+PGJw
bW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwiMFwiIHg9
XCI3MzZcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+
PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNlcXVlbmNlRmxvd18wcTNqdnN0XCIgaWQ9
XCJTZXF1ZW5jZUZsb3dfMHEzanZzdF9kaVwiPjxvbWdkaTp3YXlwb2ludCB4PVwiNTEyXCIgeHNp
OnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+PG9tZ2RpOndheXBvaW50IHg9XCI3MThc
IiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIwNlwiLz48YnBtbmRpOkJQTU5MYWJlbD48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjYxNVwiIHk9XCIxODQu
NVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBs
YW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5pdGlvbnM+IiwgIndvcmtmbG93X2lkIjog
ImV4YW1wbGVfcGFsb19hbHRvX3dpbGRmaXJlX2ZpbGVfc3VibWlzc2lvbl9hcnRpZmFjdCIsICJ2
ZXJzaW9uIjogM30sICJjcmVhdG9yX2lkIjogImdlcmFsZC50cm90bWFuQGlibS5jb20iLCAibGFz
dF9tb2RpZmllZF9ieSI6ICJnZXJhbGQudHJvdG1hbkBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRf
dGltZSI6IDE1Nzc2NjM3NjM3OTUsICJjb250ZW50X3ZlcnNpb24iOiAzLCAicHJvZ3JhbW1hdGlj
X25hbWUiOiAiZXhhbXBsZV9wYWxvX2FsdG9fd2lsZGZpcmVfZmlsZV9zdWJtaXNzaW9uX2FydGlm
YWN0IiwgIm5hbWUiOiAiRXhhbXBsZTogUGFsbyBBbHRvIFdpbGRmaXJlIEZpbGUgU3VibWlzc2lv
biAoQXJ0aWZhY3QpIn1dLCAiYWN0aW9ucyI6IFt7InRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAi
b2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAidHlwZSI6IDEsICJuYW1lIjogIkV4YW1wbGU6IFN1
Ym1pdCBGaWxlIChBcnRpZmFjdCkgdG8gV2lsZEZpcmUiLCAidGFncyI6IFtdLCAidmlld19pdGVt
cyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfcGFsb19hbHRv
X3dpbGRmaXJlX2ZpbGVfc3VibWlzc2lvbl9hcnRpZmFjdCJdLCAibG9naWNfdHlwZSI6ICJhbGwi
LCAiZXhwb3J0X2tleSI6ICJFeGFtcGxlOiBTdWJtaXQgRmlsZSAoQXJ0aWZhY3QpIHRvIFdpbGRG
aXJlIiwgInV1aWQiOiAiZWJlNTRkYzMtM2Y2NC00MWRhLTk3MjctZmZhY2FlOThjZmExIiwgImF1
dG9tYXRpb25zIjogW10sICJjb25kaXRpb25zIjogW10sICJpZCI6IDI3NSwgIm1lc3NhZ2VfZGVz
dGluYXRpb25zIjogW119XSwgImxheW91dHMiOiBbXSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6
IDIsICJpZCI6IDEwNiwgImluZHVzdHJpZXMiOiBudWxsLCAiZnVuY3Rpb25zIjogW3siZGlzcGxh
eV9uYW1lIjogIlBhbG8gQWx0byBXaWxkZmlyZSBGaWxlIFN1Ym1pc3Npb24gKEFydGlmYWN0KSIs
ICJkZXNjcmlwdGlvbiI6IHsiY29udGVudCI6ICJUaGlzIGZ1bmN0aW9uIHB1bGxzIGRvd24gdGhl
IGZpbGUgZnJvbSB0aGUgYXJ0aWZhY3QgaW4gdGhlIFJlc2lsaWVudCBJbmNpZGVudCBhbmQgc3Vi
bWl0cyB0aGUgZmlsZSB0byBQYWxvIEFsdG8gV2lsZEZpcmUuIFRoZSByZXN1bHRzIG9mIHRoZSBm
aWxlIHN1Ym1pc3Npb24gYXJlIHJldHVybmVkIHRvIHRoZSBJbmNpZGVudC4iLCAiZm9ybWF0Ijog
InRleHQifSwgImNyZWF0b3IiOiB7InR5cGUiOiAidXNlciIsICJkaXNwbGF5X25hbWUiOiAiR2Vy
YWxkIFRyb3RtYW4iLCAiaWQiOiA0LCAibmFtZSI6ICJnZXJhbGQudHJvdG1hbkBpYm0uY29tIn0s
ICJ2aWV3X2l0ZW1zIjogW3sic2hvd19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rp
b24iLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwg
ImNvbnRlbnQiOiAiZWFkMjE0YzItMTNmZS00M2Y2LWEzYzctNjc2YTg4MzM4ZGJiIiwgInN0ZXBf
bGFiZWwiOiBudWxsfSwgeyJzaG93X2lmIjogbnVsbCwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlv
biIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAi
Y29udGVudCI6ICI1ZTk0YjFkMy00OGExLTQxOGEtOWNlMy00NDMzYzY4ODllMTQiLCAic3RlcF9s
YWJlbCI6IG51bGx9XSwgInRhZ3MiOiBbXSwgImV4cG9ydF9rZXkiOiAicGFsb19hbHRvX3dpbGRm
aXJlX2ZpbGVfc3VibWlzc2lvbl9hcnRpZmFjdCIsICJ1dWlkIjogIjkwMzNjMWQ2LTVmNzUtNDVh
NC04NGYwLTJhZGU0OTUyZTE1MiIsICJsYXN0X21vZGlmaWVkX2J5IjogeyJ0eXBlIjogInVzZXIi
LCAiZGlzcGxheV9uYW1lIjogIkdlcmFsZCBUcm90bWFuIiwgImlkIjogNCwgIm5hbWUiOiAiZ2Vy
YWxkLnRyb3RtYW5AaWJtLmNvbSJ9LCAidmVyc2lvbiI6IDIsICJ3b3JrZmxvd3MiOiBbeyJwcm9n
cmFtbWF0aWNfbmFtZSI6ICJleGFtcGxlX3BhbG9fYWx0b193aWxkZmlyZV9maWxlX3N1Ym1pc3Np
b25fYXJ0aWZhY3QiLCAidGFncyI6IFtdLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAidXVp
ZCI6IG51bGwsICJhY3Rpb25zIjogW10sICJuYW1lIjogIkV4YW1wbGU6IFBhbG8gQWx0byBXaWxk
ZmlyZSBGaWxlIFN1Ym1pc3Npb24gKEFydGlmYWN0KSIsICJ3b3JrZmxvd19pZCI6IDI0OCwgImRl
c2NyaXB0aW9uIjogbnVsbH1dLCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU3NzY2MzM2NjMyOCwg
ImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJwYWxvX2FsdG9fd2lsZGZpcmUiLCAiaWQiOiAyNDMsICJu
YW1lIjogInBhbG9fYWx0b193aWxkZmlyZV9maWxlX3N1Ym1pc3Npb25fYXJ0aWZhY3QifV0sICJh
Y3Rpb25fb3JkZXIiOiBbXSwgImdlb3MiOiBudWxsLCAidGFncyI6IFtdLCAidGFza19vcmRlciI6
IFtdLCAidHlwZXMiOiBbXSwgInRpbWVmcmFtZXMiOiBudWxsLCAid29ya3NwYWNlcyI6IFtdLCAi
aW5ib3VuZF9tYWlsYm94ZXMiOiBudWxsLCAiYXV0b21hdGljX3Rhc2tzIjogW10sICJwaGFzZXMi
OiBbXSwgIm5vdGlmaWNhdGlvbnMiOiBudWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJpbmNpZGVu
dF90eXBlcyI6IFt7ImNyZWF0ZV9kYXRlIjogMTU3NzY5NDA2NTM0MiwgImRlc2NyaXB0aW9uIjog
IkN1c3RvbWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJleHBvcnRfa2V5IjogIkN1c3Rv
bWl6YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJpZCI6IDAsICJuYW1lIjogIkN1c3RvbWl6
YXRpb24gUGFja2FnZXMgKGludGVybmFsKSIsICJ1cGRhdGVfZGF0ZSI6IDE1Nzc2OTQwNjUzNDIs
ICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJlbmFibGVk
IjogZmFsc2UsICJzeXN0ZW0iOiBmYWxzZSwgInBhcmVudF9pZCI6IG51bGwsICJoaWRkZW4iOiBm
YWxzZX1dLCAic2NyaXB0cyI6IFtdLCAic2VydmVyX3ZlcnNpb24iOiB7Im1ham9yIjogMzUsICJ2
ZXJzaW9uIjogIjM1LjAuNTQ2OCIsICJidWlsZF9udW1iZXIiOiA1NDY4LCAibWlub3IiOiAwfSwg
Im1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sicHJvZ3JhbW1hdGljX25hbWUiOiAicGFsb19hbHRv
X3dpbGRmaXJlIiwgInRhZ3MiOiBbXSwgImV4cG9ydF9rZXkiOiAicGFsb19hbHRvX3dpbGRmaXJl
IiwgInV1aWQiOiAiZjZlOWIyNzMtODc5Zi00NDNiLWFlNTktY2IwNTVkMWMzMzczIiwgImV4cGVj
dF9hY2siOiB0cnVlLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJ1c2VycyI6IFsiZ2VyYWxkLnRy
b3RtYW5AaWJtLmNvbSJdLCAiYXBpX2tleXMiOiBbXSwgIm5hbWUiOiAiUGFsbyBBbHRvIFdpbGRG
aXJlIn1dLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgInJvbGVzIjogW10sICJmaWVs
ZHMiOiBbeyJvcGVyYXRpb25zIjogW10sICJ0eXBlX2lkIjogMTEsICJvcGVyYXRpb25fcGVybXMi
OiB7fSwgInRleHQiOiAiaW5jaWRlbnRfaWQiLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVm
aXgiOiBudWxsLCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDExNSwgInJlYWRfb25seSI6IGZh
bHNlLCAidXVpZCI6ICJlYWQyMTRjMi0xM2ZlLTQzZjYtYTNjNy02NzZhODgzMzhkYmIiLCAiY2hv
c2VuIjogZmFsc2UsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJ0b29sdGlwIjogIiIsICJpbnRl
cm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1wbGF0ZXMiOiBbXSwgInRhZ3Mi
OiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5j
dGlvbi9pbmNpZGVudF9pZCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAicGxhY2Vob2xk
ZXIiOiAiIiwgIm5hbWUiOiAiaW5jaWRlbnRfaWQiLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAiZGVw
cmVjYXRlZCI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAidmFsdWVzIjogW10sICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZX0sIHsib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9p
ZCI6IDExLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0ZXh0IjogImFydGlmYWN0X2lkIiwgImJs
YW5rX29wdGlvbiI6IGZhbHNlLCAicHJlZml4IjogbnVsbCwgImNoYW5nZWFibGUiOiB0cnVlLCAi
aWQiOiAyNjksICJyZWFkX29ubHkiOiBmYWxzZSwgInV1aWQiOiAiNWU5NGIxZDMtNDhhMS00MThh
LTljZTMtNDQzM2M2ODg5ZTE0IiwgImNob3NlbiI6IGZhbHNlLCAiaW5wdXRfdHlwZSI6ICJudW1i
ZXIiLCAidG9vbHRpcCI6ICIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgInJpY2hfdGV4dCI6IGZhbHNl
LCAidGVtcGxhdGVzIjogW10sICJ0YWdzIjogW10sICJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFs
c2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vYXJ0aWZhY3RfaWQiLCAiaGlkZV9ub3RpZmlj
YXRpb24iOiBmYWxzZSwgInBsYWNlaG9sZGVyIjogIiIsICJuYW1lIjogImFydGlmYWN0X2lkIiwg
ImlzX3RyYWNrZWQiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImNhbGN1bGF0ZWQiOiBm
YWxzZSwgInZhbHVlcyI6IFtdLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2V9LCB7
Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAwLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJ0
ZXh0IjogIlNpbXVsYXRpb24iLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJwcmVmaXgiOiBudWxs
LCAiY2hhbmdlYWJsZSI6IHRydWUsICJpZCI6IDM3LCAicmVhZF9vbmx5IjogdHJ1ZSwgInV1aWQi
OiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4Y2NhIiwgImNob3NlbiI6IGZhbHNl
LCAiaW5wdXRfdHlwZSI6ICJib29sZWFuIiwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRl
bnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMg
cmVhZC1vbmx5LiIsICJpbnRlcm5hbCI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0ZW1w
bGF0ZXMiOiBbXSwgInRhZ3MiOiBbXSwgImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImV4
cG9ydF9rZXkiOiAiaW5jaWRlbnQvaW5jX3RyYWluaW5nIiwgImhpZGVfbm90aWZpY2F0aW9uIjog
ZmFsc2UsICJuYW1lIjogImluY190cmFpbmluZyIsICJpc190cmFja2VkIjogZmFsc2UsICJkZXBy
ZWNhdGVkIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJ2YWx1ZXMiOiBbXSwgImRlZmF1
bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlfV0sICJvdmVycmlkZXMiOiBbXSwgImV4cG9ydF9k
YXRlIjogMTU3NzY2NDQ2NTMyMX0=
"""
    )