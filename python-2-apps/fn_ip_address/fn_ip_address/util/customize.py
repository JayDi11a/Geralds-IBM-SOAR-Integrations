# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_ip_address"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_ip_address package"""
    reload_params = {"package": u"fn_ip_address",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"incident_id"], 
                    "datatables": [], 
                    "message_destinations": [u"retrieve_ip_address"], 
                    "functions": [u"get_ip_address"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_ipify"], 
                    "actions": [u"Example: Run IPify"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     incident_id
    #   Message Destinations:
    #     retrieve_ip_address
    #   Functions:
    #     get_ip_address
    #   Workflows:
    #     example_ipify
    #   Rules:
    #     Example: Run IPify


    yield ImportDefinition(u"""
eyJ0YXNrX29yZGVyIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ1dWlkIjogIjc0YzhhMzZjLTVjZTYt
NGI4OC04YTA4LTNmMTkyMWE3YjllYiIsICJkZXNjcmlwdGlvbiI6ICJUaGlzIHdvcmtmbG93IGV4
ZWN1dGVzIGEgZnVuY3Rpb24gdGhhdCBnZXRzIHRoZSBwdWJpYyBJUCBBZGRyZXNzIG9mIHlvdXIg
aG9zdCBtYWNoaW5lLiIsICJvYmplY3RfdHlwZSI6ICJpbmNpZGVudCIsICJleHBvcnRfa2V5Ijog
ImV4YW1wbGVfaXBpZnkiLCAid29ya2Zsb3dfaWQiOiAxNTIsICJsYXN0X21vZGlmaWVkX2J5Ijog
ImdlcmFsZC50cm90bWFuQGlibS5jb20iLCAiY29udGVudCI6IHsieG1sIjogIjw/eG1sIHZlcnNp
b249XCIxLjBcIiBlbmNvZGluZz1cIlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6
Ly93d3cub21nLm9yZy9zcGVjL0JQTU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJo
dHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0
cDovL3d3dy5vbWcub3JnL3NwZWMvREQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJo
dHRwOi8vcmVzaWxpZW50LmlibS5jb20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMu
b3JnLzIwMDEvWE1MU2NoZW1hXCIgeG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9Y
TUxTY2hlbWEtaW5zdGFuY2VcIiB0YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEu
b3JnL3Rlc3RcIj48cHJvY2VzcyBpZD1cImV4YW1wbGVfaXBpZnlcIiBpc0V4ZWN1dGFibGU9XCJ0
cnVlXCIgbmFtZT1cIkV4YW1wbGU6IElQaWZ5XCI+PGRvY3VtZW50YXRpb24+VGhpcyB3b3JrZmxv
dyBleGVjdXRlcyBhIGZ1bmN0aW9uIHRoYXQgZ2V0cyB0aGUgcHViaWMgSVAgQWRkcmVzcyBvZiB5
b3VyIGhvc3QgbWFjaGluZS48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2
ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzF0dTEyczg8L291dGdvaW5nPjwv
c3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xNjg5aXd0XCIgbmFtZT1c
IkdldCBJUCBBZGRyZXNzXCIgcmVzaWxpZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25F
bGVtZW50cz48cmVzaWxpZW50OmZ1bmN0aW9uIHV1aWQ9XCJjYzgzMmM2Yy1kNzQyLTQ3NzQtOWEx
YS1jYjUyY2FmMGNiYzNcIj57XCJpbnB1dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRc
IjpcImluY2lkZW50LmFkZE5vdGUocmVzdWx0cy52YWx1ZSlcIixcInByZV9wcm9jZXNzaW5nX3Nj
cmlwdFwiOlwiaW5wdXRzLmluY2lkZW50X2lkID0gaW5jaWRlbnQuaWRcIn08L3Jlc2lsaWVudDpm
dW5jdGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMXR1MTJz
ODwvaW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18xdmMzYzQ5PC9vdXRnb2luZz48L3Nl
cnZpY2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMXR1MTJzOFwiIHNvdXJj
ZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzE2ODlp
d3RcIi8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMDAyYW5pNlwiPjxpbmNvbWluZz5TZXF1ZW5j
ZUZsb3dfMXZjM2M0OTwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2Vx
dWVuY2VGbG93XzF2YzNjNDlcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xNjg5aXd0XCIgdGFy
Z2V0UmVmPVwiRW5kRXZlbnRfMDAyYW5pNlwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5u
b3RhdGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0Pjwv
dGV4dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNv
dXJjZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9u
XzFreHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3Jh
bV8xXCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQ
TU5QbGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1
NWFzeG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0
PVwiMzZcIiB3aWR0aD1cIjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFi
ZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5PVwi
MjIzXCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
U2hhcGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5u
b3RhdGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwi
MTAwXCIgeD1cIjk5XCIgeT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1O
RWRnZSBicG1uRWxlbWVudD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9u
XzFzZXVqNDhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21nZGM6
UG9pbnRcIiB5PVwiMjIwXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJv
bWdkYzpQb2ludFwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJTZXJ2aWNlVGFza18xNjg5aXd0XCIgaWQ9XCJTZXJ2aWNlVGFza18x
Njg5aXd0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1c
IjQxNVwiIHk9XCIxNjZcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBt
bkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMXR1MTJzOFwiIGlkPVwiU2VxdWVuY2VGbG93XzF0dTEy
czhfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRc
IiB5PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNDE1XCIgeHNpOnR5cGU9XCJvbWdkYzpQ
b2ludFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9
XCIxM1wiIHdpZHRoPVwiMFwiIHg9XCIzMDYuNVwiIHk9XCIxODQuNVwiLz48L2JwbW5kaTpCUE1O
TGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJF
bmRFdmVudF8wMDJhbmk2XCIgaWQ9XCJFbmRFdmVudF8wMDJhbmk2X2RpXCI+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIzNlwiIHdpZHRoPVwiMzZcIiB4PVwiNzA0LjAzNTcxNDI4NTcxNDNcIiB5PVwi
MTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0
aD1cIjBcIiB4PVwiNzIyLjAzNTcxNDI4NTcxNDNcIiB5PVwiMjI3XCIvPjwvYnBtbmRpOkJQTU5M
YWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVudD1cIlNl
cXVlbmNlRmxvd18xdmMzYzQ5XCIgaWQ9XCJTZXF1ZW5jZUZsb3dfMXZjM2M0OV9kaVwiPjxvbWdk
aTp3YXlwb2ludCB4PVwiNTE1XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZcIi8+
PG9tZ2RpOndheXBvaW50IHg9XCI3MDRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48YnBtbmRpOkJQTU5MYWJlbD48b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9
XCIwXCIgeD1cIjYwOS41XCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6
QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5EaWFncmFtPjwvZGVmaW5p
dGlvbnM+IiwgIndvcmtmbG93X2lkIjogImV4YW1wbGVfaXBpZnkiLCAidmVyc2lvbiI6IDN9LCAi
bGFzdF9tb2RpZmllZF90aW1lIjogMTU0Njk2OTEyMDI1MSwgImNyZWF0b3JfaWQiOiAiZ2VyYWxk
LnRyb3RtYW5AaWJtLmNvbSIsICJhY3Rpb25zIjogW10sICJwcm9ncmFtbWF0aWNfbmFtZSI6ICJl
eGFtcGxlX2lwaWZ5IiwgIm5hbWUiOiAiRXhhbXBsZTogSVBpZnkifV0sICJhY3Rpb25zIjogW3si
bG9naWNfdHlwZSI6ICJhbGwiLCAibmFtZSI6ICJFeGFtcGxlOiBSdW4gSVBpZnkiLCAidmlld19p
dGVtcyI6IFtdLCAidHlwZSI6IDEsICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfaXBpZnkiXSwgIm9i
amVjdF90eXBlIjogImluY2lkZW50IiwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidXVpZCI6
ICI0YTI2NzliMS01Njk0LTQ1YWItOTRhMC1hYmJkN2IwMzc2YWIiLCAiYXV0b21hdGlvbnMiOiBb
XSwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogUnVuIElQaWZ5IiwgImNvbmRpdGlvbnMiOiBbXSwg
ImlkIjogMTY4LCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbXX1dLCAibGF5b3V0cyI6IFtdLCAi
ZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjogMiwgImlkIjogNTUsICJpbmR1c3RyaWVzIjogbnVsbCwg
InBoYXNlcyI6IFtdLCAiYWN0aW9uX29yZGVyIjogW10sICJnZW9zIjogbnVsbCwgImxvY2FsZSI6
IG51bGwsICJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMiwgInZlcnNpb24iOiAiMzIuMC40
NTAyIiwgImJ1aWxkX251bWJlciI6IDQ1MDIsICJtaW5vciI6IDB9LCAidGltZWZyYW1lcyI6IG51
bGwsICJ3b3Jrc3BhY2VzIjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImZ1bmN0aW9ucyI6
IFt7ImRpc3BsYXlfbmFtZSI6ICJHZXQgSVAgQWRkcmVzcyIsICJkZXNjcmlwdGlvbiI6IHsiY29u
dGVudCI6ICJUaGlzIGlzIGEgc2ltcGxlIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgSVB2NCBB
ZGRyZXNzIG9mIG9uZXMgbWFjaGluZS4iLCAiZm9ybWF0IjogInRleHQifSwgImNyZWF0b3IiOiB7
ImRpc3BsYXlfbmFtZSI6ICJHZXJhbGQgVHJvdG1hbiIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiA0
LCAibmFtZSI6ICJnZXJhbGQudHJvdG1hbkBpYm0uY29tIn0sICJ2aWV3X2l0ZW1zIjogW3sic2hv
d19pZiI6IG51bGwsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19saW5rX2hlYWRl
ciI6IGZhbHNlLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImNvbnRlbnQiOiAiZWFkMjE0YzIt
MTNmZS00M2Y2LWEzYzctNjc2YTg4MzM4ZGJiIiwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJleHBv
cnRfa2V5IjogImdldF9pcF9hZGRyZXNzIiwgInV1aWQiOiAiY2M4MzJjNmMtZDc0Mi00Nzc0LTlh
MWEtY2I1MmNhZjBjYmMzIiwgImxhc3RfbW9kaWZpZWRfYnkiOiB7ImRpc3BsYXlfbmFtZSI6ICJH
ZXJhbGQgVHJvdG1hbiIsICJ0eXBlIjogInVzZXIiLCAiaWQiOiA0LCAibmFtZSI6ICJnZXJhbGQu
dHJvdG1hbkBpYm0uY29tIn0sICJ2ZXJzaW9uIjogMSwgIndvcmtmbG93cyI6IFt7ImRlc2NyaXB0
aW9uIjogbnVsbCwgIm9iamVjdF90eXBlIjogImluY2lkZW50IiwgImFjdGlvbnMiOiBbXSwgIm5h
bWUiOiAiRXhhbXBsZTogSVBpZnkiLCAid29ya2Zsb3dfaWQiOiAxNTIsICJwcm9ncmFtbWF0aWNf
bmFtZSI6ICJleGFtcGxlX2lwaWZ5IiwgInV1aWQiOiBudWxsfV0sICJsYXN0X21vZGlmaWVkX3Rp
bWUiOiAxNTQ2OTY4NTQwMDQyLCAiZGVzdGluYXRpb25faGFuZGxlIjogInJldHJpZXZlX2lwX2Fk
ZHJlc3MiLCAiaWQiOiAxNzEsICJuYW1lIjogImdldF9pcF9hZGRyZXNzIn1dLCAibm90aWZpY2F0
aW9ucyI6IG51bGwsICJyZWd1bGF0b3JzIjogbnVsbCwgImluY2lkZW50X3R5cGVzIjogW3siY3Jl
YXRlX2RhdGUiOiAxNTQ2OTgxMzc2ODE3LCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQ
YWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdl
cyAoaW50ZXJuYWwpIiwgImlkIjogMCwgIm5hbWUiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAo
aW50ZXJuYWwpIiwgInVwZGF0ZV9kYXRlIjogMTU0Njk4MTM3NjgxNywgInV1aWQiOiAiYmZlZWMy
ZDQtMzc3MC0xMWU4LWFkMzktNGEwMDA0MDQ0YWEwIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5c3Rl
bSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlfV0sICJzY3JpcHRz
IjogW10sICJ0eXBlcyI6IFtdLCAibWVzc2FnZV9kZXN0aW5hdGlvbnMiOiBbeyJ1dWlkIjogIjk1
YjAwYzQyLTg2ODYtNDcxYy1hNDNjLWMyNTEzNDJjZDY5YyIsICJleHBvcnRfa2V5IjogInJldHJp
ZXZlX2lwX2FkZHJlc3MiLCAibmFtZSI6ICJSZXRyaWV2ZSBJUCBBZGRyZXNzIiwgImRlc3RpbmF0
aW9uX3R5cGUiOiAwLCAicHJvZ3JhbW1hdGljX25hbWUiOiAicmV0cmlldmVfaXBfYWRkcmVzcyIs
ICJleHBlY3RfYWNrIjogdHJ1ZSwgInVzZXJzIjogWyJnZXJhbGQudHJvdG1hbkBpYm0uY29tIl19
XSwgImluY2lkZW50X2FydGlmYWN0X3R5cGVzIjogW10sICJyb2xlcyI6IFtdLCAiZmllbGRzIjog
W3sib3BlcmF0aW9ucyI6IFtdLCAidHlwZV9pZCI6IDAsICJvcGVyYXRpb25fcGVybXMiOiB7fSwg
InRleHQiOiAiU2ltdWxhdGlvbiIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZpeCI6IG51
bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMzcsICJyZWFkX29ubHkiOiB0cnVlLCAidXVp
ZCI6ICJjM2YwZTNlZC0yMWUxLTRkNTMtYWZmYi1mZTVjYTMzMDhjY2EiLCAiY2hvc2VuIjogZmFs
c2UsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAidG9vbHRpcCI6ICJXaGV0aGVyIHRoZSBpbmNp
ZGVudCBpcyBhIHNpbXVsYXRpb24gb3IgYSByZWd1bGFyIGluY2lkZW50LiAgVGhpcyBmaWVsZCBp
cyByZWFkLW9ubHkuIiwgImludGVybmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRl
bXBsYXRlcyI6IFtdLCAiZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlk
ZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgImRlcHJlY2F0
ZWQiOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAidmFsdWVzIjog
W119LCB7Im9wZXJhdGlvbnMiOiBbXSwgInR5cGVfaWQiOiAxMSwgIm9wZXJhdGlvbl9wZXJtcyI6
IHt9LCAidGV4dCI6ICJpbmNpZGVudF9pZCIsICJibGFua19vcHRpb24iOiBmYWxzZSwgInByZWZp
eCI6IG51bGwsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImlkIjogMTE1LCAicmVhZF9vbmx5IjogZmFs
c2UsICJ1dWlkIjogImVhZDIxNGMyLTEzZmUtNDNmNi1hM2M3LTY3NmE4ODMzOGRiYiIsICJjaG9z
ZW4iOiBmYWxzZSwgImlucHV0X3R5cGUiOiAibnVtYmVyIiwgInRvb2x0aXAiOiAiIiwgImludGVy
bmFsIjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRlbXBsYXRlcyI6IFtdLCAiZXhwb3J0
X2tleSI6ICJfX2Z1bmN0aW9uL2luY2lkZW50X2lkIiwgImhpZGVfbm90aWZpY2F0aW9uIjogZmFs
c2UsICJwbGFjZWhvbGRlciI6ICIiLCAibmFtZSI6ICJpbmNpZGVudF9pZCIsICJkZXByZWNhdGVk
IjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgInZhbHVlcyI6IFtd
fV0sICJvdmVycmlkZXMiOiBbXSwgImV4cG9ydF9kYXRlIjogMTU0Njk3NDM2NzkxMX0=
"""
    )