# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_carbon_black_cloud_devices"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_carbon_black_cloud_devices package"""
    reload_params = {"package": u"fn_carbon_black_cloud_devices",
                    "incident_fields": [], 
                    "action_fields": [u"carbon_black_device_actions", u"toggle_setting"], 
                    "function_params": [u"carbon_black_device_query_string", u"device_action_type", u"incident_id", u"toggle"], 
                    "datatables": [], 
                    "message_destinations": [u"carbon_black_cloud"], 
                    "functions": [u"carbon_black_cloud_devices_quarantine"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_carbon_black_cloud_devices_quarantine"], 
                    "actions": [u"Example: Run Carbon Black Device Quarantine"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Action fields:
    #     carbon_black_device_actions
    #     toggle_setting
    #   Function inputs:
    #     carbon_black_device_query_string
    #     device_action_type
    #     incident_id
    #     toggle
    #   Message Destinations:
    #     carbon_black_cloud
    #   Functions:
    #     carbon_black_cloud_devices_quarantine
    #   Workflows:
    #     example_carbon_black_cloud_devices_quarantine
    #   Rules:
    #     Example: Run Carbon Black Device Quarantine


    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFJ1
biBDYXJib24gQmxhY2sgRGV2aWNlIFF1YXJhbnRpbmUiLCAiaWQiOiAxOTUsICJsb2dpY190eXBl
IjogImFsbCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBS
dW4gQ2FyYm9uIEJsYWNrIERldmljZSBRdWFyYW50aW5lIiwgIm9iamVjdF90eXBlIjogImFydGlm
YWN0IiwgInRhZ3MiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidHlwZSI6IDEsICJ1
dWlkIjogIjE4OGMzODliLWY4OGEtNDRlZi1iOWY3LThkZDQ3ODcyYjcxYSIsICJ2aWV3X2l0ZW1z
IjogW3siY29udGVudCI6ICI4YTIwMmFkYS1kYjRhLTQ4NTYtOGE1OS04ZDg3ZWUwOWRiZjIiLCAi
ZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiYWN0aW9uaW52b2NhdGlvbiIs
ICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwi
OiBudWxsfSwgeyJjb250ZW50IjogImI1ZWY2MmZhLWVhYTUtNGVlMS1iZmRlLTAxODMwNTVkYzc5
NyIsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRfdHlwZSI6ICJhY3Rpb25pbnZvY2F0
aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9s
YWJlbCI6IG51bGx9XSwgIndvcmtmbG93cyI6IFsiZXhhbXBsZV9jYXJib25fYmxhY2tfY2xvdWRf
ZGV2aWNlc19xdWFyYW50aW5lIl19XSwgImFwcHMiOiBbXSwgImF1dG9tYXRpY190YXNrcyI6IFtd
LCAiZXhwb3J0X2RhdGUiOiAxNTkyODA4NTg3NDgwLCAiZXhwb3J0X2Zvcm1hdF92ZXJzaW9uIjog
MiwgImZpZWxkcyI6IFt7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlv
biI6IHRydWUsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgImNob3Nl
biI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJkZXByZWNhdGVk
IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vZGV2aWNlX2FjdGlvbl90eXBlIiwg
ImhpZGVfbm90aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDc5NiwgImlucHV0X3R5cGUiOiAic2Vs
ZWN0IiwgImludGVybmFsIjogZmFsc2UsICJpc190cmFja2VkIjogZmFsc2UsICJuYW1lIjogImRl
dmljZV9hY3Rpb25fdHlwZSIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBb
XSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2Us
ICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6
ICJkZXZpY2VfYWN0aW9uX3R5cGUiLCAidG9vbHRpcCI6ICJTcGVjaWZpZXMgdGhlIGFjdGlvbiB0
byBiZSB0YWtlbiBvbiBhIGdpdmVuIGRldmljZSIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogImVh
ODQ3OTBmLTNiYWYtNDA5NS04ZWQ5LTYyMDEyZTYwODdjMiIsICJ2YWx1ZXMiOiBbeyJkZWZhdWx0
IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAibGFiZWwiOiAiQkFD
S0dST1VORF9TQ0FOIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICIwZmVhNmJhZS1jNTFj
LTQ2OGItOWE5YS0xZGUxZjQ1ZWU2NzkiLCAidmFsdWUiOiAzNjh9LCB7ImRlZmF1bHQiOiBmYWxz
ZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjogZmFsc2UsICJsYWJlbCI6ICJCWVBBU1MiLCAi
cHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogImUxZWQ3NzY3LTk3YjQtNDhiYi04NDY3LWIzY2Rl
MTYzYjEwNiIsICJ2YWx1ZSI6IDM2OX0sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRy
dWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogIlVOSU5TVEFMTF9TRU5TT1IiLCAicHJvcGVy
dGllcyI6IG51bGwsICJ1dWlkIjogIjI3Yjk5MWJmLTJiZjUtNGU5YS05MmMxLTc1Nzk5ODQzNDYz
YyIsICJ2YWx1ZSI6IDM3MH0sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJo
aWRkZW4iOiBmYWxzZSwgImxhYmVsIjogIkRFTEVURV9TRU5TT1IiLCAicHJvcGVydGllcyI6IG51
bGwsICJ1dWlkIjogImU1ODQyZTU0LTk2OGItNGU2Ni1iMTM2LTNmMTFiMzU4NWY4ZCIsICJ2YWx1
ZSI6IDM3MX0sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBm
YWxzZSwgImxhYmVsIjogIlFVQVJBTlRJTkUiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjog
IjdkMGQ0ZTY2LTQ0ODktNGFjZC1iYTY0LTM3ZTQyZDg3MDVkOCIsICJ2YWx1ZSI6IDM3Mn0sIHsi
ZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVs
IjogIlVQREFURV9QT0xJQ1kiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjlkNDcxZTAz
LWYwNWEtNDhmMi04NWQ4LTUzZDUzOGMzMDVmOCIsICJ2YWx1ZSI6IDM3M30sIHsiZGVmYXVsdCI6
IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogIlVQREFU
RV9TRU5TT1JfVkVSU0lPTiIsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiODFjYTkyMzAt
ZTY4NC00NWY5LWEzYjgtZDcxYjlmZTk5MWRlIiwgInZhbHVlIjogMzc0fV19LCB7ImFsbG93X2Rl
ZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6
IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hv
c2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6
ICJfX2Z1bmN0aW9uL2NhcmJvbl9ibGFja19kZXZpY2VfcXVlcnlfc3RyaW5nIiwgImhpZGVfbm90
aWZpY2F0aW9uIjogZmFsc2UsICJpZCI6IDc5NSwgImlucHV0X3R5cGUiOiAidGV4dCIsICJpbnRl
cm5hbCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJjYXJib25fYmxhY2tf
ZGV2aWNlX3F1ZXJ5X3N0cmluZyIsICJvcGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMi
OiBbXSwgInBsYWNlaG9sZGVyIjogIiIsICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFs
c2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4
dCI6ICJjYXJib25fYmxhY2tfZGV2aWNlX3F1ZXJ5X3N0cmluZyIsICJ0b29sdGlwIjogIkFjY2Vw
dHMgcXVlcnkgc3RyaW5nIHRvIHNlYXJjaCBmb3IgZGV2aWNlKHMpIiwgInR5cGVfaWQiOiAxMSwg
InV1aWQiOiAiOTliNmEyMTEtNzMxYS00OTJmLWIwZjYtNzlhMjE1NjAyN2I0IiwgInZhbHVlcyI6
IFtdfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxz
ZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFs
c2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxz
ZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9pbmNpZGVudF9pZCIsICJoaWRlX25vdGlmaWNh
dGlvbiI6IGZhbHNlLCAiaWQiOiAxNDUsICJpbnB1dF90eXBlIjogIm51bWJlciIsICJpbnRlcm5h
bCI6IGZhbHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJpbmNpZGVudF9pZCIsICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgIm9wZXJhdGlvbnMiOiBbXSwgInBsYWNlaG9sZGVyIjogIiIs
ICJwcmVmaXgiOiBudWxsLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwg
InRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJpbmNpZGVudF9pZCIsICJ0b29s
dGlwIjogIiIsICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogImVhZDIxNGMyLTEzZmUtNDNmNi1hM2M3
LTY3NmE4ODMzOGRiYiIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZh
bHNlLCAiYmxhbmtfb3B0aW9uIjogdHJ1ZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFi
bGUiOiB0cnVlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBm
YWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxzZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi90b2dn
bGUiLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogNzk3LCAiaW5wdXRfdHlwZSI6
ICJzZWxlY3QiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUi
OiAidG9nZ2xlIiwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicGxh
Y2Vob2xkZXIiOiAiIiwgInByZWZpeCI6IG51bGwsICJyZWFkX29ubHkiOiBmYWxzZSwgInJpY2hf
dGV4dCI6IGZhbHNlLCAidGFncyI6IFtdLCAidGVtcGxhdGVzIjogW10sICJ0ZXh0IjogInRvZ2ds
ZSIsICJ0b29sdGlwIjogIlR1cm5zIHRoZSBkZXZpY2UgYWN0aW9uIG9uIG9yIG9mZiIsICJ0eXBl
X2lkIjogMTEsICJ1dWlkIjogImUxZTcyMGM2LWFmOWEtNDgxOS04OGZlLTdhNDdkODQwMzE1NyIs
ICJ2YWx1ZXMiOiBbeyJkZWZhdWx0IjogdHJ1ZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjog
ZmFsc2UsICJsYWJlbCI6ICJPTiIsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiZGIwNDUz
NWQtMTgwMi00ZWYxLWIzN2QtMDkxYjA4NGQ1NDEzIiwgInZhbHVlIjogMzc1fSwgeyJkZWZhdWx0
IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAibGFiZWwiOiAiT0ZG
IiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICIwNWMyYTI2Ni04MTZlLTQ2OWYtODc2Yy0w
YjE4NmQ1ZmQwYjMiLCAidmFsdWUiOiAzNzZ9XX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZh
bHNlLCAiYmxhbmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2Vh
YmxlIjogdHJ1ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjog
ZmFsc2UsICJkZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogImFjdGlvbmludm9jYXRp
b24vdG9nZ2xlX3NldHRpbmciLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogNzk4
LCAiaW5wdXRfdHlwZSI6ICJzZWxlY3QiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQi
OiBmYWxzZSwgIm5hbWUiOiAidG9nZ2xlX3NldHRpbmciLCAib3BlcmF0aW9uX3Blcm1zIjoge30s
ICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogInByb3BlcnRp
ZXMiLCAicmVhZF9vbmx5IjogZmFsc2UsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwg
InRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJUb2dnbGUgU2V0dGluZyIsICJ0b29sdGlwIjogIiIs
ICJ0eXBlX2lkIjogNiwgInV1aWQiOiAiYjVlZjYyZmEtZWFhNS00ZWUxLWJmZGUtMDE4MzA1NWRj
Nzk3IiwgInZhbHVlcyI6IFt7ImRlZmF1bHQiOiB0cnVlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRk
ZW4iOiBmYWxzZSwgImxhYmVsIjogIk9OIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICJh
MmZmODJmYi1mNDVkLTQzMjMtODgwYy1iYmJiMzUxMDM0ODEiLCAidmFsdWUiOiAzNzd9LCB7ImRl
ZmF1bHQiOiBmYWxzZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjogZmFsc2UsICJsYWJlbCI6
ICJPRkYiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjJjNDI1M2Y0LThlNTEtNGM1Mi1i
NDA0LTQyYTBmMDQ5NzZjMiIsICJ2YWx1ZSI6IDM3OH1dfSwgeyJhbGxvd19kZWZhdWx0X3ZhbHVl
IjogZmFsc2UsICJibGFua19vcHRpb24iOiB0cnVlLCAiY2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hh
bmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZl
ciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6ICJhY3Rpb25pbnZv
Y2F0aW9uL2NhcmJvbl9ibGFja19kZXZpY2VfYWN0aW9ucyIsICJoaWRlX25vdGlmaWNhdGlvbiI6
IGZhbHNlLCAiaWQiOiA3OTksICJpbnB1dF90eXBlIjogInNlbGVjdCIsICJpbnRlcm5hbCI6IGZh
bHNlLCAiaXNfdHJhY2tlZCI6IGZhbHNlLCAibmFtZSI6ICJjYXJib25fYmxhY2tfZGV2aWNlX2Fj
dGlvbnMiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhv
bGRlciI6ICIiLCAicHJlZml4IjogInByb3BlcnRpZXMiLCAicmVhZF9vbmx5IjogZmFsc2UsICJy
aWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6ICJD
YXJib24gQmxhY2sgRGV2aWNlIEFjdGlvbnMiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDYs
ICJ1dWlkIjogIjhhMjAyYWRhLWRiNGEtNDg1Ni04YTU5LThkODdlZTA5ZGJmMiIsICJ2YWx1ZXMi
OiBbeyJkZWZhdWx0IjogZmFsc2UsICJlbmFibGVkIjogdHJ1ZSwgImhpZGRlbiI6IGZhbHNlLCAi
bGFiZWwiOiAiQkFDS0dST1VORF9TQ0FOIiwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI3
ZDgwMTQ0Yy02MDg0LTQ2YjctOWI3OC1iOWEwNmUzNWJmZTEiLCAidmFsdWUiOiAzNzl9LCB7ImRl
ZmF1bHQiOiBmYWxzZSwgImVuYWJsZWQiOiB0cnVlLCAiaGlkZGVuIjogZmFsc2UsICJsYWJlbCI6
ICJCWVBBU1MiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjAyMmUzZjNhLTdiMTMtNDA2
Ny04M2NmLWQ0MjEwMWFmMTAwMiIsICJ2YWx1ZSI6IDM4MH0sIHsiZGVmYXVsdCI6IGZhbHNlLCAi
ZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogIlVOSU5TVEFMTF9TRU5T
T1IiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogIjhkMzc2ZTY2LTk3NWEtNDM3Ni04ZjA5
LTVkYjNmYjM1OThjOSIsICJ2YWx1ZSI6IDM4MX0sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxl
ZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogIkRFTEVURV9TRU5TT1IiLCAicHJv
cGVydGllcyI6IG51bGwsICJ1dWlkIjogIjgzYWNhMDkwLTA3MzEtNDNkZC05M2Y4LTU5MmYxYWFi
MTJiNCIsICJ2YWx1ZSI6IDM4Mn0sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUs
ICJoaWRkZW4iOiBmYWxzZSwgImxhYmVsIjogIlFVQVJBTlRJTkUiLCAicHJvcGVydGllcyI6IG51
bGwsICJ1dWlkIjogIjhjODJiNzEyLWFhNjItNDJmZC04NTVmLWNhNDZmMDFhZTY2MSIsICJ2YWx1
ZSI6IDM4M30sIHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBm
YWxzZSwgImxhYmVsIjogIlVQREFURV9QT0xJQ1kiLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlk
IjogImQ1M2JiYzkwLWY2YjgtNDU1MC1iYTZjLTI5ODQyZmRiMDI2NCIsICJ2YWx1ZSI6IDM4NH0s
IHsiZGVmYXVsdCI6IGZhbHNlLCAiZW5hYmxlZCI6IHRydWUsICJoaWRkZW4iOiBmYWxzZSwgImxh
YmVsIjogIlVQREFURV9TRU5TT1JfVkVSU0lPTiIsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQi
OiAiZGMzN2U1MzctNjcwYy00YmRjLTliNGEtMjA4ZjViYWRjZWM1IiwgInZhbHVlIjogMzg1fV19
LCB7ImFsbG93X2RlZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAi
Y2FsY3VsYXRlZCI6IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwg
ImRlZmF1bHRfY2hvc2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAi
ZXhwb3J0X2tleSI6ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImlkIjogNTEsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaW50ZXJuYWwiOiBm
YWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgIm9wZXJh
dGlvbl9wZXJtcyI6IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicHJlZml4IjogbnVsbCwgInJlYWRf
b25seSI6IHRydWUsICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6
IFtdLCAidGV4dCI6ICJTaW11bGF0aW9uIiwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRl
bnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMg
cmVhZC1vbmx5LiIsICJ0eXBlX2lkIjogMCwgInV1aWQiOiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFm
ZmItZmU1Y2EzMzA4Y2NhIiwgInZhbHVlcyI6IFtdfV0sICJmdW5jdGlvbnMiOiBbeyJjcmVhdG9y
IjogeyJkaXNwbGF5X25hbWUiOiAiR2VyYWxkIFRyb3RtYW4iLCAiaWQiOiAxMywgIm5hbWUiOiAi
Z2VyYWxkLnRyb3RtYW5AaWJtLmNvbSIsICJ0eXBlIjogInVzZXIifSwgImRlc2NyaXB0aW9uIjog
eyJmb3JtYXQiOiAidGV4dCIsICJjb250ZW50IjogIlRoaXMgZnVuY3Rpb24gaXMgcGFydCBvZiB0
aGUgQ2FyYm9uIEJsYWNrIFBsYXRmb3JtIEFQSSBmdW5jdGlvbmFsaXR5IGZvY3VzaW5nIHNvbGVs
eSBvbiB0aGUgRGV2aWNlcyBBUEkgc3Vic2V0IG9mIGVuZHBvaW50cyB0aGF0IHNvbGVseSBxdWVy
aWVzIGEgZGV2aWNlIGFuZCBpbXBsZW1lbnRzIGEgcXVhcmFudGluZS4ifSwgImRlc3RpbmF0aW9u
X2hhbmRsZSI6ICJjYXJib25fYmxhY2tfY2xvdWQiLCAiZGlzcGxheV9uYW1lIjogIkNhcmJvbiBC
bGFjayBDbG91ZCBEZXZpY2VzIFF1YXJhbnRpbmUiLCAiZXhwb3J0X2tleSI6ICJjYXJib25fYmxh
Y2tfY2xvdWRfZGV2aWNlc19xdWFyYW50aW5lIiwgImlkIjogMTQzLCAibGFzdF9tb2RpZmllZF9i
eSI6IHsiZGlzcGxheV9uYW1lIjogIkdlcmFsZCBUcm90bWFuIiwgImlkIjogMTMsICJuYW1lIjog
ImdlcmFsZC50cm90bWFuQGlibS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJsYXN0X21vZGlmaWVk
X3RpbWUiOiAxNTkyNzk4MjkzMDU4LCAibmFtZSI6ICJjYXJib25fYmxhY2tfY2xvdWRfZGV2aWNl
c19xdWFyYW50aW5lIiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiYTc4YjRhMGItOWZjYi00NzlhLThi
MmUtYjMyZGE2ZjkwYTMzIiwgInZlcnNpb24iOiAyLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQi
OiAiZWFkMjE0YzItMTNmZS00M2Y2LWEzYzctNjc2YTg4MzM4ZGJiIiwgImVsZW1lbnQiOiAiZmll
bGRfdXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJz
aG93X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6
ICI5OWI2YTIxMS03MzFhLTQ5MmYtYjBmNi03OWEyMTU2MDI3YjQiLCAiZWxlbWVudCI6ICJmaWVs
ZF91dWlkIiwgImZpZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNo
b3dfbGlua19oZWFkZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfSwgeyJjb250ZW50Ijog
ImVhODQ3OTBmLTNiYWYtNDA5NS04ZWQ5LTYyMDEyZTYwODdjMiIsICJlbGVtZW50IjogImZpZWxk
X3V1aWQiLCAiZmllbGRfdHlwZSI6ICJfX2Z1bmN0aW9uIiwgInNob3dfaWYiOiBudWxsLCAic2hv
d19saW5rX2hlYWRlciI6IGZhbHNlLCAic3RlcF9sYWJlbCI6IG51bGx9LCB7ImNvbnRlbnQiOiAi
ZTFlNzIwYzYtYWY5YS00ODE5LTg4ZmUtN2E0N2Q4NDAzMTU3IiwgImVsZW1lbnQiOiAiZmllbGRf
dXVpZCIsICJmaWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93
X2xpbmtfaGVhZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH1dLCAid29ya2Zsb3dzIjog
W3siYWN0aW9ucyI6IFtdLCAiZGVzY3JpcHRpb24iOiBudWxsLCAibmFtZSI6ICJFeGFtcGxlOiBD
YXJib24gQmxhY2sgQ2xvdWQgRGV2aWNlcyBRdWFyYW50aW5lIiwgIm9iamVjdF90eXBlIjogImFy
dGlmYWN0IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY2FyYm9uX2JsYWNrX2Nsb3Vk
X2RldmljZXNfcXVhcmFudGluZSIsICJ0YWdzIjogW10sICJ1dWlkIjogbnVsbCwgIndvcmtmbG93
X2lkIjogMTc2fV19XSwgImdlb3MiOiBudWxsLCAiZ3JvdXBzIjogbnVsbCwgImlkIjogMTMsICJp
bmJvdW5kX21haWxib3hlcyI6IG51bGwsICJpbmNpZGVudF9hcnRpZmFjdF90eXBlcyI6IFtdLCAi
aW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1OTI4MDg2MDMxNTgsICJjcmVhdGVf
ZGF0ZSI6IDE1OTI4MDg2MDMxNTgsICJ1dWlkIjogImJmZWVjMmQ0LTM3NzAtMTFlOC1hZDM5LTRh
MDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRl
cm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCki
LCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZW5hYmxlZCI6
IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxsLCAiaGlkZGVuIjogZmFs
c2UsICJpZCI6IDB9XSwgImluZHVzdHJpZXMiOiBudWxsLCAibGF5b3V0cyI6IFtdLCAibG9jYWxl
IjogbnVsbCwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3siYXBpX2tleXMiOiBbImQ5NGZjMDI2
LTAzZTktNGY1ZC1iZDQ3LWQ4MDgwMTQ0NTZjYiJdLCAiZGVzdGluYXRpb25fdHlwZSI6IDAsICJl
eHBlY3RfYWNrIjogdHJ1ZSwgImV4cG9ydF9rZXkiOiAiY2FyYm9uX2JsYWNrX2Nsb3VkIiwgIm5h
bWUiOiAiQ2FyYm9uIEJsYWNrIENsb3VkIiwgInByb2dyYW1tYXRpY19uYW1lIjogImNhcmJvbl9i
bGFja19jbG91ZCIsICJ0YWdzIjogW10sICJ1c2VycyI6IFsicmVzYWRtaW5AZXhhbXBsZS5jb20i
LCAiZW1haWxzQGV4YW1wbGUuY29tIiwgIm9yY2hlc3RyYXRpb25AZXhhbXBsZS5jb20iLCAiZ2Vy
YWxkLnRyb3RtYW5AaWJtLmNvbSIsICJ3YWRhbmRAdXMuaWJtLmNvbSJdLCAidXVpZCI6ICI2ODMy
ZDM5YS1jMzBlLTQ1YTktOGM5NS1mNDdkOGEzNjZlNGYifV0sICJub3RpZmljYXRpb25zIjogbnVs
bCwgIm92ZXJyaWRlcyI6IFtdLCAicGhhc2VzIjogW10sICJyZWd1bGF0b3JzIjogbnVsbCwgInJv
bGVzIjogW10sICJzY3JpcHRzIjogW10sICJzZXJ2ZXJfdmVyc2lvbiI6IHsiYnVpbGRfbnVtYmVy
IjogNzYsICJtYWpvciI6IDM2LCAibWlub3IiOiAyLCAidmVyc2lvbiI6ICIzNi4yLjc2In0sICJ0
YWdzIjogW10sICJ0YXNrX29yZGVyIjogW10sICJ0aW1lZnJhbWVzIjogbnVsbCwgInR5cGVzIjog
W10sICJ3b3JrZmxvd3MiOiBbeyJhY3Rpb25zIjogW10sICJjb250ZW50IjogeyJ2ZXJzaW9uIjog
NywgIndvcmtmbG93X2lkIjogImV4YW1wbGVfY2FyYm9uX2JsYWNrX2Nsb3VkX2RldmljZXNfcXVh
cmFudGluZSIsICJ4bWwiOiAiPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThc
Ij8+PGRlZmluaXRpb25zIHhtbG5zPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBNTi8yMDEw
MDUyNC9NT0RFTFwiIHhtbG5zOmJwbW5kaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQTU4v
MjAxMDA1MjQvRElcIiB4bWxuczpvbWdkYz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIw
MTAwNTI0L0RDXCIgeG1sbnM6b21nZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9ERC8yMDEw
MDUyNC9ESVwiIHhtbG5zOnJlc2lsaWVudD1cImh0dHA6Ly9yZXNpbGllbnQuaWJtLmNvbS9icG1u
XCIgeG1sbnM6eHNkPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWFcIiB4bWxuczp4
c2k9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZVwiIHRhcmdldE5h
bWVzcGFjZT1cImh0dHA6Ly93d3cuY2FtdW5kYS5vcmcvdGVzdFwiPjxwcm9jZXNzIGlkPVwiZXhh
bXBsZV9jYXJib25fYmxhY2tfY2xvdWRfZGV2aWNlc19xdWFyYW50aW5lXCIgaXNFeGVjdXRhYmxl
PVwidHJ1ZVwiIG5hbWU9XCJFeGFtcGxlOiBDYXJib24gQmxhY2sgQ2xvdWQgRGV2aWNlcyBRdWFy
YW50aW5lXCI+PGRvY3VtZW50YXRpb24+VGhpcyBleGFtcGxlIHdvcmsgZmxvdyBjYWxscyB0aGUg
Q2FyYm9uIEJsYWNrIENsb3VkIERldmljZXMgQVBJIGVuZHBvaW50IGFjY2VwdHMgYSBxdWVyeSBz
dHJpbmcgaW4gdGhlIGZvcm0gb2YgYXJ0aWZhY3RzIHN1Y2ggYXMgSVBzLCBIb3N0IE5hbWVzIChk
ZXZpY2UgbmFtZXMpLCBldGMgYW5kIHBlcmZvcm1zIGEgcXVhcmFudGluZSBvZiB0aGUgZGV2aWNl
LiBSZXR1cm5zIHRoZSBzdGF0dXMgb2YgdGhlIGNvbXBsZXRpb24gb2YgdGhlIHF1YXJhbnRpbmUg
dG8gYSBub3RlIGluIHRoZSBpbmNpZGVudC48L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9
XCJTdGFydEV2ZW50XzE1NWFzeG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzBzMXh4eHU8L291
dGdvaW5nPjwvc3RhcnRFdmVudD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18wamhsMGVp
XCIgbmFtZT1cIkNhcmJvbiBCbGFjayBDbG91ZCBEZXZpY2VzIFF1YXJhbi4uLlwiIHJlc2lsaWVu
dDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2lsaWVudDpmdW5jdGlv
biB1dWlkPVwiYTc4YjRhMGItOWZjYi00NzlhLThiMmUtYjMyZGE2ZjkwYTMzXCI+e1wiaW5wdXRz
XCI6e1wiZTFlNzIwYzYtYWY5YS00ODE5LTg4ZmUtN2E0N2Q4NDAzMTU3XCI6e1wiaW5wdXRfdHlw
ZVwiOlwic3RhdGljXCIsXCJzdGF0aWNfaW5wdXRcIjp7XCJtdWx0aXNlbGVjdF92YWx1ZVwiOltd
LFwic2VsZWN0X3ZhbHVlXCI6XCJkYjA0NTM1ZC0xODAyLTRlZjEtYjM3ZC0wOTFiMDg0ZDU0MTNc
In19fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImluY2lkZW50LmFkZE5vdGUoc3RyKHJl
c3VsdHMudmFsdWUpKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuaW5jaWRl
bnRfaWQgPSBpbmNpZGVudC5pZFxcbmlucHV0cy5jYXJib25fYmxhY2tfZGV2aWNlX3F1ZXJ5X3N0
cmluZyA9IGFydGlmYWN0LnZhbHVlXFxuaW5wdXRzLmRldmljZV9hY3Rpb25fdHlwZSA9IHJ1bGUu
cHJvcGVydGllcy5jYXJib25fYmxhY2tfZGV2aWNlX2FjdGlvbnNcXG5pbnB1dHMudG9nZ2xlID0g
cnVsZS5wcm9wZXJ0aWVzLnRvZ2dsZV9zZXR0aW5nXFxuXCJ9PC9yZXNpbGllbnQ6ZnVuY3Rpb24+
PC9leHRlbnNpb25FbGVtZW50cz48aW5jb21pbmc+U2VxdWVuY2VGbG93XzBzMXh4eHU8L2luY29t
aW5nPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMDRzYXRqbzwvb3V0Z29pbmc+PC9zZXJ2aWNlVGFz
az48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzBzMXh4eHVcIiBzb3VyY2VSZWY9XCJT
dGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJTZXJ2aWNlVGFza18wamhsMGVpXCIvPjxl
bmRFdmVudCBpZD1cIkVuZEV2ZW50XzE4NW1oOWNcIj48aW5jb21pbmc+U2VxdWVuY2VGbG93XzA0
c2F0am88L2luY29taW5nPjwvZW5kRXZlbnQ+PHNlcXVlbmNlRmxvdyBpZD1cIlNlcXVlbmNlRmxv
d18wNHNhdGpvXCIgc291cmNlUmVmPVwiU2VydmljZVRhc2tfMGpobDBlaVwiIHRhcmdldFJlZj1c
IkVuZEV2ZW50XzE4NW1oOWNcIi8+PHRleHRBbm5vdGF0aW9uIGlkPVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dFwiPjx0ZXh0PlN0YXJ0IHlvdXIgd29ya2Zsb3cgaGVyZTwvdGV4dD48L3RleHRBbm5v
dGF0aW9uPjxhc3NvY2lhdGlvbiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBzb3VyY2VSZWY9
XCJTdGFydEV2ZW50XzE1NWFzeG1cIiB0YXJnZXRSZWY9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0
XCIvPjwvcHJvY2Vzcz48YnBtbmRpOkJQTU5EaWFncmFtIGlkPVwiQlBNTkRpYWdyYW1fMVwiPjxi
cG1uZGk6QlBNTlBsYW5lIGJwbW5FbGVtZW50PVwidW5kZWZpbmVkXCIgaWQ9XCJCUE1OUGxhbmVf
MVwiPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5FbGVtZW50PVwiU3RhcnRFdmVudF8xNTVhc3htXCIg
aWQ9XCJTdGFydEV2ZW50XzE1NWFzeG1fZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIg
d2lkdGg9XCIzNlwiIHg9XCIxNjJcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdk
YzpCb3VuZHMgaGVpZ2h0PVwiMFwiIHdpZHRoPVwiOTBcIiB4PVwiMTU3XCIgeT1cIjIyM1wiLz48
L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTlNoYXBlIGJw
bW5FbGVtZW50PVwiVGV4dEFubm90YXRpb25fMWt4eGl5dFwiIGlkPVwiVGV4dEFubm90YXRpb25f
MWt4eGl5dF9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzBcIiB3aWR0aD1cIjEwMFwiIHg9
XCI5OVwiIHk9XCIyNTRcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBt
bkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4
X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIxNjlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjIyMFwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjE1M1wiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMjU0XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBlIGJwbW5F
bGVtZW50PVwiU2VydmljZVRhc2tfMGpobDBlaVwiIGlkPVwiU2VydmljZVRhc2tfMGpobDBlaV9k
aVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI0MDRcIiB5
PVwiMTY2XCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5FbGVtZW50
PVwiU2VxdWVuY2VGbG93XzBzMXh4eHVcIiBpZD1cIlNlcXVlbmNlRmxvd18wczF4eHh1X2RpXCI+
PG9tZ2RpOndheXBvaW50IHg9XCIxOThcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIgeT1cIjIw
NlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQwNFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTNcIiB3
aWR0aD1cIjBcIiB4PVwiMzAxXCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1u
ZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJFbmRFdmVudF8xODVt
aDljXCIgaWQ9XCJFbmRFdmVudF8xODVtaDljX2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIz
NlwiIHdpZHRoPVwiMzZcIiB4PVwiNzE4XCIgeT1cIjE4OFwiLz48YnBtbmRpOkJQTU5MYWJlbD48
b21nZGM6Qm91bmRzIGhlaWdodD1cIjEzXCIgd2lkdGg9XCIwXCIgeD1cIjczNlwiIHk9XCIyMjdc
Ii8+PC9icG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdl
IGJwbW5FbGVtZW50PVwiU2VxdWVuY2VGbG93XzA0c2F0am9cIiBpZD1cIlNlcXVlbmNlRmxvd18w
NHNhdGpvX2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCI1MDRcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjIwNlwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjcxOFwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVp
Z2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNjExXCIgeT1cIjE4NFwiLz48L2JwbW5kaTpCUE1O
TGFiZWw+PC9icG1uZGk6QlBNTkVkZ2U+PC9icG1uZGk6QlBNTlBsYW5lPjwvYnBtbmRpOkJQTU5E
aWFncmFtPjwvZGVmaW5pdGlvbnM+In0sICJjb250ZW50X3ZlcnNpb24iOiA3LCAiY3JlYXRvcl9p
ZCI6ICJnZXJhbGQudHJvdG1hbkBpYm0uY29tIiwgImRlc2NyaXB0aW9uIjogIlRoaXMgZXhhbXBs
ZSB3b3JrIGZsb3cgY2FsbHMgdGhlIENhcmJvbiBCbGFjayBDbG91ZCBEZXZpY2VzIEFQSSBlbmRw
b2ludCBhY2NlcHRzIGEgcXVlcnkgc3RyaW5nIGluIHRoZSBmb3JtIG9mIGFydGlmYWN0cyBzdWNo
IGFzIElQcywgSG9zdCBOYW1lcyAoZGV2aWNlIG5hbWVzKSwgZXRjIGFuZCBwZXJmb3JtcyBhIHF1
YXJhbnRpbmUgb2YgdGhlIGRldmljZS4gUmV0dXJucyB0aGUgc3RhdHVzIG9mIHRoZSBjb21wbGV0
aW9uIG9mIHRoZSBxdWFyYW50aW5lIHRvIGEgbm90ZSBpbiB0aGUgaW5jaWRlbnQuIiwgImV4cG9y
dF9rZXkiOiAiZXhhbXBsZV9jYXJib25fYmxhY2tfY2xvdWRfZGV2aWNlc19xdWFyYW50aW5lIiwg
Imxhc3RfbW9kaWZpZWRfYnkiOiAiZ2VyYWxkLnRyb3RtYW5AaWJtLmNvbSIsICJsYXN0X21vZGlm
aWVkX3RpbWUiOiAxNTkyODA4NDUzODA1LCAibmFtZSI6ICJFeGFtcGxlOiBDYXJib24gQmxhY2sg
Q2xvdWQgRGV2aWNlcyBRdWFyYW50aW5lIiwgIm9iamVjdF90eXBlIjogImFydGlmYWN0IiwgInBy
b2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfY2FyYm9uX2JsYWNrX2Nsb3VkX2RldmljZXNfcXVh
cmFudGluZSIsICJ0YWdzIjogW10sICJ1dWlkIjogIjM5YTkzMGFmLTQ4N2UtNDRjZi1iZjZkLTQ5
ZTIxY2EzMGRmNyIsICJ3b3JrZmxvd19pZCI6IDE3Nn1dLCAid29ya3NwYWNlcyI6IFtdfQ==
"""
    )