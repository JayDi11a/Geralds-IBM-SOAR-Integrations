# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_carbon_black_cloud_devices"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_carbon_black_cloud_devices package"""
    reload_params = {"package": u"fn_carbon_black_cloud_devices",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"carbon_black_device_query_string", u"incident_id"], 
                    "datatables": [], 
                    "message_destinations": [u"carbon_black_cloud"], 
                    "functions": [u"carbon_black_cloud_devices_quarantine"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_carbon_black_cloud_devices_quarantine"], 
                    "actions": [u"Example: Run Carbon Black Device Quarantine"], 
                    "incident_artifact_types": [] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     carbon_black_device_query_string
    #     incident_id
    #   Message Destinations:
    #     carbon_black_cloud
    #   Functions:
    #     carbon_black_cloud_devices_quarantine
    #   Workflows:
    #     example_carbon_black_cloud_devices_quarantine
    #   Rules:
    #     Example: Run Carbon Black Device Quarantine


    yield ImportDefinition(u"""
eyJhY3Rpb25fb3JkZXIiOiBbXSwgImFjdGlvbnMiOiBbeyJhdXRvbWF0aW9ucyI6IFtdLCAiY29u
ZGl0aW9ucyI6IFtdLCAiZW5hYmxlZCI6IHRydWUsICJleHBvcnRfa2V5IjogIkV4YW1wbGU6IFJ1
biBDYXJib24gQmxhY2sgRGV2aWNlIFF1YXJhbnRpbmUiLCAiaWQiOiAxOTUsICJsb2dpY190eXBl
IjogImFsbCIsICJtZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFtdLCAibmFtZSI6ICJFeGFtcGxlOiBS
dW4gQ2FyYm9uIEJsYWNrIERldmljZSBRdWFyYW50aW5lIiwgIm9iamVjdF90eXBlIjogImFydGlm
YWN0IiwgInRhZ3MiOiBbXSwgInRpbWVvdXRfc2Vjb25kcyI6IDg2NDAwLCAidHlwZSI6IDEsICJ1
dWlkIjogIjE4OGMzODliLWY4OGEtNDRlZi1iOWY3LThkZDQ3ODcyYjcxYSIsICJ2aWV3X2l0ZW1z
IjogW10sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfY2FyYm9uX2JsYWNrX2Nsb3VkX2RldmljZXNf
cXVhcmFudGluZSJdfV0sICJhcHBzIjogW10sICJhdXRvbWF0aWNfdGFza3MiOiBbXSwgImV4cG9y
dF9kYXRlIjogMTU5MjY5Njc4MDQ4MSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6IDIsICJmaWVs
ZHMiOiBbeyJhbGxvd19kZWZhdWx0X3ZhbHVlIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxz
ZSwgImNhbGN1bGF0ZWQiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAiY2hvc2VuIjogZmFs
c2UsICJkZWZhdWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImRlcHJlY2F0ZWQiOiBmYWxz
ZSwgImV4cG9ydF9rZXkiOiAiX19mdW5jdGlvbi9jYXJib25fYmxhY2tfZGV2aWNlX3F1ZXJ5X3N0
cmluZyIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiaWQiOiA3OTUsICJpbnB1dF90eXBl
IjogInRleHQiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUi
OiAiY2FyYm9uX2JsYWNrX2RldmljZV9xdWVyeV9zdHJpbmciLCAib3BlcmF0aW9uX3Blcm1zIjog
e30sICJvcGVyYXRpb25zIjogW10sICJwbGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwg
InJlYWRfb25seSI6IGZhbHNlLCAicmljaF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1w
bGF0ZXMiOiBbXSwgInRleHQiOiAiY2FyYm9uX2JsYWNrX2RldmljZV9xdWVyeV9zdHJpbmciLCAi
dG9vbHRpcCI6ICJBY2NlcHRzIHF1ZXJ5IHN0cmluZyB0byBzZWFyY2ggZm9yIGRldmljZShzKSIs
ICJ0eXBlX2lkIjogMTEsICJ1dWlkIjogIjk5YjZhMjExLTczMWEtNDkyZi1iMGY2LTc5YTIxNTYw
MjdiNCIsICJ2YWx1ZXMiOiBbXX0sIHsiYWxsb3dfZGVmYXVsdF92YWx1ZSI6IGZhbHNlLCAiYmxh
bmtfb3B0aW9uIjogZmFsc2UsICJjYWxjdWxhdGVkIjogZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1
ZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFsc2UsICJk
ZXByZWNhdGVkIjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vaW5jaWRlbnRfaWQi
LCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlkIjogMTQ1LCAiaW5wdXRfdHlwZSI6ICJu
dW1iZXIiLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3RyYWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAi
aW5jaWRlbnRfaWQiLCAib3BlcmF0aW9uX3Blcm1zIjoge30sICJvcGVyYXRpb25zIjogW10sICJw
bGFjZWhvbGRlciI6ICIiLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IGZhbHNlLCAicmlj
aF90ZXh0IjogZmFsc2UsICJ0YWdzIjogW10sICJ0ZW1wbGF0ZXMiOiBbXSwgInRleHQiOiAiaW5j
aWRlbnRfaWQiLCAidG9vbHRpcCI6ICIiLCAidHlwZV9pZCI6IDExLCAidXVpZCI6ICJlYWQyMTRj
Mi0xM2ZlLTQzZjYtYTNjNy02NzZhODgzMzhkYmIiLCAidmFsdWVzIjogW119LCB7ImFsbG93X2Rl
ZmF1bHRfdmFsdWUiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiY2FsY3VsYXRlZCI6
IGZhbHNlLCAiY2hhbmdlYWJsZSI6IHRydWUsICJjaG9zZW4iOiBmYWxzZSwgImRlZmF1bHRfY2hv
c2VuX2J5X3NlcnZlciI6IGZhbHNlLCAiZGVwcmVjYXRlZCI6IGZhbHNlLCAiZXhwb3J0X2tleSI6
ICJpbmNpZGVudC9pbmNfdHJhaW5pbmciLCAiaGlkZV9ub3RpZmljYXRpb24iOiBmYWxzZSwgImlk
IjogNTEsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaW50ZXJuYWwiOiBmYWxzZSwgImlzX3Ry
YWNrZWQiOiBmYWxzZSwgIm5hbWUiOiAiaW5jX3RyYWluaW5nIiwgIm9wZXJhdGlvbl9wZXJtcyI6
IHt9LCAib3BlcmF0aW9ucyI6IFtdLCAicHJlZml4IjogbnVsbCwgInJlYWRfb25seSI6IHRydWUs
ICJyaWNoX3RleHQiOiBmYWxzZSwgInRhZ3MiOiBbXSwgInRlbXBsYXRlcyI6IFtdLCAidGV4dCI6
ICJTaW11bGF0aW9uIiwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRlbnQgaXMgYSBzaW11
bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMgcmVhZC1vbmx5LiIs
ICJ0eXBlX2lkIjogMCwgInV1aWQiOiAiYzNmMGUzZWQtMjFlMS00ZDUzLWFmZmItZmU1Y2EzMzA4
Y2NhIiwgInZhbHVlcyI6IFtdfV0sICJmdW5jdGlvbnMiOiBbeyJjcmVhdG9yIjogeyJkaXNwbGF5
X25hbWUiOiAiR2VyYWxkIFRyb3RtYW4iLCAiaWQiOiAxMywgIm5hbWUiOiAiZ2VyYWxkLnRyb3Rt
YW5AaWJtLmNvbSIsICJ0eXBlIjogInVzZXIifSwgImRlc2NyaXB0aW9uIjogeyJmb3JtYXQiOiAi
dGV4dCIsICJjb250ZW50IjogIlRoaXMgZnVuY3Rpb24gaXMgcGFydCBvZiB0aGUgQ2FyYm9uIEJs
YWNrIFBsYXRmb3JtIEFQSSBmdW5jdGlvbmFsaXR5IGZvY3VzaW5nIHNvbGVseSBvbiB0aGUgRGV2
aWNlcyBBUEkgc3Vic2V0IG9mIGVuZHBvaW50cyB0aGF0IHNvbGVseSBxdWVyaWVzIGEgZGV2aWNl
IGFuZCBpbXBsZW1lbnRzIGEgcXVhcmFudGluZS4ifSwgImRlc3RpbmF0aW9uX2hhbmRsZSI6ICJj
YXJib25fYmxhY2tfY2xvdWQiLCAiZGlzcGxheV9uYW1lIjogIkNhcmJvbiBCbGFjayBDbG91ZCBE
ZXZpY2VzIFF1YXJhbnRpbmUiLCAiZXhwb3J0X2tleSI6ICJjYXJib25fYmxhY2tfY2xvdWRfZGV2
aWNlc19xdWFyYW50aW5lIiwgImlkIjogMTQzLCAibGFzdF9tb2RpZmllZF9ieSI6IHsiZGlzcGxh
eV9uYW1lIjogIkdlcmFsZCBUcm90bWFuIiwgImlkIjogMTMsICJuYW1lIjogImdlcmFsZC50cm90
bWFuQGlibS5jb20iLCAidHlwZSI6ICJ1c2VyIn0sICJsYXN0X21vZGlmaWVkX3RpbWUiOiAxNTky
Njk1OTEwOTE4LCAibmFtZSI6ICJjYXJib25fYmxhY2tfY2xvdWRfZGV2aWNlc19xdWFyYW50aW5l
IiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiYTc4YjRhMGItOWZjYi00NzlhLThiMmUtYjMyZGE2Zjkw
YTMzIiwgInZlcnNpb24iOiAxLCAidmlld19pdGVtcyI6IFt7ImNvbnRlbnQiOiAiZWFkMjE0YzIt
MTNmZS00M2Y2LWEzYzctNjc2YTg4MzM4ZGJiIiwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJm
aWVsZF90eXBlIjogIl9fZnVuY3Rpb24iLCAic2hvd19pZiI6IG51bGwsICJzaG93X2xpbmtfaGVh
ZGVyIjogZmFsc2UsICJzdGVwX2xhYmVsIjogbnVsbH0sIHsiY29udGVudCI6ICI5OWI2YTIxMS03
MzFhLTQ5MmYtYjBmNi03OWEyMTU2MDI3YjQiLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZp
ZWxkX3R5cGUiOiAiX19mdW5jdGlvbiIsICJzaG93X2lmIjogbnVsbCwgInNob3dfbGlua19oZWFk
ZXIiOiBmYWxzZSwgInN0ZXBfbGFiZWwiOiBudWxsfV0sICJ3b3JrZmxvd3MiOiBbeyJhY3Rpb25z
IjogW10sICJkZXNjcmlwdGlvbiI6IG51bGwsICJuYW1lIjogIkV4YW1wbGU6IENhcmJvbiBCbGFj
ayBDbG91ZCBEZXZpY2VzIFF1YXJhbnRpbmUiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAi
cHJvZ3JhbW1hdGljX25hbWUiOiAiZXhhbXBsZV9jYXJib25fYmxhY2tfY2xvdWRfZGV2aWNlc19x
dWFyYW50aW5lIiwgInRhZ3MiOiBbXSwgInV1aWQiOiBudWxsLCAid29ya2Zsb3dfaWQiOiAxNzZ9
XX1dLCAiZ2VvcyI6IG51bGwsICJncm91cHMiOiBudWxsLCAiaWQiOiA2LCAiaW5ib3VuZF9tYWls
Ym94ZXMiOiBudWxsLCAiaW5jaWRlbnRfYXJ0aWZhY3RfdHlwZXMiOiBbXSwgImluY2lkZW50X3R5
cGVzIjogW3sidXBkYXRlX2RhdGUiOiAxNTkyNjk2Nzk1NjA4LCAiY3JlYXRlX2RhdGUiOiAxNTky
Njk2Nzk1NjA4LCAidXVpZCI6ICJiZmVlYzJkNC0zNzcwLTExZTgtYWQzOS00YTAwMDQwNDRhYTAi
LCAiZGVzY3JpcHRpb24iOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImV4
cG9ydF9rZXkiOiAiQ3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgIm5hbWUiOiAi
Q3VzdG9taXphdGlvbiBQYWNrYWdlcyAoaW50ZXJuYWwpIiwgImVuYWJsZWQiOiBmYWxzZSwgInN5
c3RlbSI6IGZhbHNlLCAicGFyZW50X2lkIjogbnVsbCwgImhpZGRlbiI6IGZhbHNlLCAiaWQiOiAw
fV0sICJpbmR1c3RyaWVzIjogbnVsbCwgImxheW91dHMiOiBbXSwgImxvY2FsZSI6IG51bGwsICJt
ZXNzYWdlX2Rlc3RpbmF0aW9ucyI6IFt7ImFwaV9rZXlzIjogW10sICJkZXN0aW5hdGlvbl90eXBl
IjogMCwgImV4cGVjdF9hY2siOiB0cnVlLCAiZXhwb3J0X2tleSI6ICJjYXJib25fYmxhY2tfY2xv
dWQiLCAibmFtZSI6ICJDYXJib24gQmxhY2sgQ2xvdWQiLCAicHJvZ3JhbW1hdGljX25hbWUiOiAi
Y2FyYm9uX2JsYWNrX2Nsb3VkIiwgInRhZ3MiOiBbXSwgInVzZXJzIjogW10sICJ1dWlkIjogIjY4
MzJkMzlhLWMzMGUtNDVhOS04Yzk1LWY0N2Q4YTM2NmU0ZiJ9XSwgIm5vdGlmaWNhdGlvbnMiOiBu
dWxsLCAib3ZlcnJpZGVzIjogW10sICJwaGFzZXMiOiBbXSwgInJlZ3VsYXRvcnMiOiBudWxsLCAi
cm9sZXMiOiBbXSwgInNjcmlwdHMiOiBbXSwgInNlcnZlcl92ZXJzaW9uIjogeyJidWlsZF9udW1i
ZXIiOiA3NiwgIm1ham9yIjogMzYsICJtaW5vciI6IDIsICJ2ZXJzaW9uIjogIjM2LjIuNzYifSwg
InRhZ3MiOiBbXSwgInRhc2tfb3JkZXIiOiBbXSwgInRpbWVmcmFtZXMiOiBudWxsLCAidHlwZXMi
OiBbXSwgIndvcmtmbG93cyI6IFt7ImFjdGlvbnMiOiBbXSwgImNvbnRlbnQiOiB7InZlcnNpb24i
OiA0LCAid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9jYXJib25fYmxhY2tfY2xvdWRfZGV2aWNlc19x
dWFyYW50aW5lIiwgInhtbCI6ICI8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYt
OFwiPz48ZGVmaW5pdGlvbnMgeG1sbnM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3BlYy9CUE1OLzIw
MTAwNTI0L01PREVMXCIgeG1sbnM6YnBtbmRpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvQlBN
Ti8yMDEwMDUyNC9ESVwiIHhtbG5zOm9tZ2RjPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMvREQv
MjAxMDA1MjQvRENcIiB4bWxuczpvbWdkaT1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0RELzIw
MTAwNTI0L0RJXCIgeG1sbnM6cmVzaWxpZW50PVwiaHR0cDovL3Jlc2lsaWVudC5pYm0uY29tL2Jw
bW5cIiB4bWxuczp4c2Q9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYVwiIHhtbG5z
OnhzaT1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlXCIgdGFyZ2V0
TmFtZXNwYWNlPVwiaHR0cDovL3d3dy5jYW11bmRhLm9yZy90ZXN0XCI+PHByb2Nlc3MgaWQ9XCJl
eGFtcGxlX2NhcmJvbl9ibGFja19jbG91ZF9kZXZpY2VzX3F1YXJhbnRpbmVcIiBpc0V4ZWN1dGFi
bGU9XCJ0cnVlXCIgbmFtZT1cIkV4YW1wbGU6IENhcmJvbiBCbGFjayBDbG91ZCBEZXZpY2VzIFF1
YXJhbnRpbmVcIj48ZG9jdW1lbnRhdGlvbj5UaGlzIGV4YW1wbGUgd29yayBmbG93IGNhbGxzIHRo
ZSBDYXJib24gQmxhY2sgQ2xvdWQgRGV2aWNlcyBBUEkgZW5kcG9pbnQgYWNjZXB0cyBhIHF1ZXJ5
IHN0cmluZyBpbiB0aGUgZm9ybSBvZiBhcnRpZmFjdHMgc3VjaCBhcyBJUHMsIEhvc3QgTmFtZXMg
KGRldmljZSBuYW1lcyksIGV0YyBhbmQgcGVyZm9ybXMgYSBxdWFyYW50aW5lIG9mIHRoZSBkZXZp
Y2UuIFJldHVybnMgdGhlIHN0YXR1cyBvZiB0aGUgY29tcGxldGlvbiBvZiB0aGUgcXVhcmFudGlu
ZSB0byBhIG5vdGUgaW4gdGhlIGluY2lkZW50LjwvZG9jdW1lbnRhdGlvbj48c3RhcnRFdmVudCBp
ZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiPjxvdXRnb2luZz5TZXF1ZW5jZUZsb3dfMHMxeHh4dTwv
b3V0Z29pbmc+PC9zdGFydEV2ZW50PjxzZXJ2aWNlVGFzayBpZD1cIlNlcnZpY2VUYXNrXzBqaGww
ZWlcIiBuYW1lPVwiQ2FyYm9uIEJsYWNrIENsb3VkIERldmljZXMgUXVhcmFuLi4uXCIgcmVzaWxp
ZW50OnR5cGU9XCJmdW5jdGlvblwiPjxleHRlbnNpb25FbGVtZW50cz48cmVzaWxpZW50OmZ1bmN0
aW9uIHV1aWQ9XCJhNzhiNGEwYi05ZmNiLTQ3OWEtOGIyZS1iMzJkYTZmOTBhMzNcIj57XCJpbnB1
dHNcIjp7fSxcInBvc3RfcHJvY2Vzc2luZ19zY3JpcHRcIjpcImluY2lkZW50LmFkZE5vdGUoc3Ry
KHJlc3VsdHMudmFsdWUpKVwiLFwicHJlX3Byb2Nlc3Npbmdfc2NyaXB0XCI6XCJpbnB1dHMuaW5j
aWRlbnRfaWQgPSBpbmNpZGVudC5pZFxcbmlucHV0cy5jYXJib25fYmxhY2tfZGV2aWNlX3F1ZXJ5
X3N0cmluZyA9IGFydGlmYWN0LnZhbHVlICBcIn08L3Jlc2lsaWVudDpmdW5jdGlvbj48L2V4dGVu
c2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMHMxeHh4dTwvaW5jb21pbmc+PG91
dGdvaW5nPlNlcXVlbmNlRmxvd18wNHNhdGpvPC9vdXRnb2luZz48L3NlcnZpY2VUYXNrPjxzZXF1
ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMHMxeHh4dVwiIHNvdXJjZVJlZj1cIlN0YXJ0RXZl
bnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzBqaGwwZWlcIi8+PGVuZEV2ZW50
IGlkPVwiRW5kRXZlbnRfMTg1bWg5Y1wiPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMDRzYXRqbzwv
aW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVuY2VGbG93XzA0c2F0
am9cIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18wamhsMGVpXCIgdGFyZ2V0UmVmPVwiRW5kRXZl
bnRfMTg1bWg5Y1wiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0
XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4dEFubm90YXRpb24+
PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJjZVJlZj1cIlN0YXJ0
RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFreHhpeXRcIi8+PC9w
cm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8xXCI+PGJwbW5kaTpC
UE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5QbGFuZV8xXCI+PGJw
bW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFzeG1cIiBpZD1cIlN0
YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMzZcIiB3aWR0aD1c
IjM2XCIgeD1cIjE2MlwiIHk9XCIxODhcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5k
cyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIxNTdcIiB5PVwiMjIzXCIvPjwvYnBtbmRp
OkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1l
bnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0
X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAwXCIgeD1cIjk5XCIg
eT1cIjI1NFwiLz48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1ORWRnZSBicG1uRWxlbWVu
dD1cIkFzc29jaWF0aW9uXzFzZXVqNDhcIiBpZD1cIkFzc29jaWF0aW9uXzFzZXVqNDhfZGlcIj48
b21nZGk6d2F5cG9pbnQgeD1cIjE2OVwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjIw
XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiMTUzXCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9
XCIyNTRcIi8+PC9icG1uZGk6QlBNTkVkZ2U+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9
XCJTZXJ2aWNlVGFza18wamhsMGVpXCIgaWQ9XCJTZXJ2aWNlVGFza18wamhsMGVpX2RpXCI+PG9t
Z2RjOkJvdW5kcyBoZWlnaHQ9XCI4MFwiIHdpZHRoPVwiMTAwXCIgeD1cIjQwNFwiIHk9XCIxNjZc
Ii8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1
ZW5jZUZsb3dfMHMxeHh4dVwiIGlkPVwiU2VxdWVuY2VGbG93XzBzMXh4eHVfZGlcIj48b21nZGk6
d2F5cG9pbnQgeD1cIjE5OFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5PVwiMjA2XCIvPjxv
bWdkaTp3YXlwb2ludCB4PVwiNDA0XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIyMDZc
Ii8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIxM1wiIHdpZHRoPVwi
MFwiIHg9XCIzMDFcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1O
RWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2ZW50XzE4NW1oOWNcIiBp
ZD1cIkVuZEV2ZW50XzE4NW1oOWNfZGlcIj48b21nZGM6Qm91bmRzIGhlaWdodD1cIjM2XCIgd2lk
dGg9XCIzNlwiIHg9XCI3MThcIiB5PVwiMTg4XCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpC
b3VuZHMgaGVpZ2h0PVwiMTNcIiB3aWR0aD1cIjBcIiB4PVwiNzM2XCIgeT1cIjIyN1wiLz48L2Jw
bW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVkZ2UgYnBtbkVs
ZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMDRzYXRqb1wiIGlkPVwiU2VxdWVuY2VGbG93XzA0c2F0am9f
ZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUwNFwiIHhzaTp0eXBlPVwib21nZGM6UG9pbnRcIiB5
PVwiMjA2XCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNzE4XCIgeHNpOnR5cGU9XCJvbWdkYzpQb2lu
dFwiIHk9XCIyMDZcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIx
M1wiIHdpZHRoPVwiMFwiIHg9XCI2MTFcIiB5PVwiMTg0XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48
L2JwbW5kaTpCUE1ORWRnZT48L2JwbW5kaTpCUE1OUGxhbmU+PC9icG1uZGk6QlBNTkRpYWdyYW0+
PC9kZWZpbml0aW9ucz4ifSwgImNvbnRlbnRfdmVyc2lvbiI6IDQsICJjcmVhdG9yX2lkIjogImdl
cmFsZC50cm90bWFuQGlibS5jb20iLCAiZGVzY3JpcHRpb24iOiAiVGhpcyBleGFtcGxlIHdvcmsg
ZmxvdyBjYWxscyB0aGUgQ2FyYm9uIEJsYWNrIENsb3VkIERldmljZXMgQVBJIGVuZHBvaW50IGFj
Y2VwdHMgYSBxdWVyeSBzdHJpbmcgaW4gdGhlIGZvcm0gb2YgYXJ0aWZhY3RzIHN1Y2ggYXMgSVBz
LCBIb3N0IE5hbWVzIChkZXZpY2UgbmFtZXMpLCBldGMgYW5kIHBlcmZvcm1zIGEgcXVhcmFudGlu
ZSBvZiB0aGUgZGV2aWNlLiBSZXR1cm5zIHRoZSBzdGF0dXMgb2YgdGhlIGNvbXBsZXRpb24gb2Yg
dGhlIHF1YXJhbnRpbmUgdG8gYSBub3RlIGluIHRoZSBpbmNpZGVudC4iLCAiZXhwb3J0X2tleSI6
ICJleGFtcGxlX2NhcmJvbl9ibGFja19jbG91ZF9kZXZpY2VzX3F1YXJhbnRpbmUiLCAibGFzdF9t
b2RpZmllZF9ieSI6ICJnZXJhbGQudHJvdG1hbkBpYm0uY29tIiwgImxhc3RfbW9kaWZpZWRfdGlt
ZSI6IDE1OTI2OTYzNTI0ODYsICJuYW1lIjogIkV4YW1wbGU6IENhcmJvbiBCbGFjayBDbG91ZCBE
ZXZpY2VzIFF1YXJhbnRpbmUiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAicHJvZ3JhbW1h
dGljX25hbWUiOiAiZXhhbXBsZV9jYXJib25fYmxhY2tfY2xvdWRfZGV2aWNlc19xdWFyYW50aW5l
IiwgInRhZ3MiOiBbXSwgInV1aWQiOiAiMzlhOTMwYWYtNDg3ZS00NGNmLWJmNmQtNDllMjFjYTMw
ZGY3IiwgIndvcmtmbG93X2lkIjogMTc2fV0sICJ3b3Jrc3BhY2VzIjogW119
"""
    )